// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Kaleidoscope::KaleidoscopePackageTests::ProductTarget" /* KaleidoscopePackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_48 /* Build configuration list for PBXAggregateTarget "KaleidoscopePackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_51 /* PBXTargetDependency */,
			);
			name = KaleidoscopePackageTests;
			productName = KaleidoscopePackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_33 /* AST.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* AST.swift */; };
		OBJ_34 /* Lexer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Lexer.swift */; };
		OBJ_35 /* Parser.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Parser.swift */; };
		OBJ_36 /* Token.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Token.swift */; };
		OBJ_38 /* LexerProtocol.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LexerProtocol::LexerProtocol::Product" /* LexerProtocol.framework */; };
		OBJ_46 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_57 /* LexerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* LexerTests.swift */; };
		OBJ_58 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* XCTestManifests.swift */; };
		OBJ_60 /* Kaleidoscope.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Kaleidoscope::Kaleidoscope::Product" /* Kaleidoscope.framework */; };
		OBJ_61 /* LexerProtocol.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "LexerProtocol::LexerProtocol::Product" /* LexerProtocol.framework */; };
		OBJ_68 /* LexerProtocol.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* LexerProtocol.swift */; };
		OBJ_69 /* TokenStream.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* TokenStream.swift */; };
		OBJ_76 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* Package.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		2CAE0AB22329180800131833 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LexerProtocol::LexerProtocol";
			remoteInfo = LexerProtocol;
		};
		2CAE0AB32329180800131833 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kaleidoscope::Kaleidoscope";
			remoteInfo = Kaleidoscope;
		};
		2CAE0AB42329180800131833 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "LexerProtocol::LexerProtocol";
			remoteInfo = LexerProtocol;
		};
		2CAE0AB52329180B00131833 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Kaleidoscope::KaleidoscopeTests";
			remoteInfo = KaleidoscopeTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Kaleidoscope::Kaleidoscope::Product" /* Kaleidoscope.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = Kaleidoscope.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Kaleidoscope::KaleidoscopeTests::Product" /* KaleidoscopeTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = KaleidoscopeTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"LexerProtocol::LexerProtocol::Product" /* LexerProtocol.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = LexerProtocol.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Lexer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Lexer.swift; sourceTree = "<group>"; };
		OBJ_11 /* Parser.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Parser.swift; sourceTree = "<group>"; };
		OBJ_12 /* Token.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Token.swift; sourceTree = "<group>"; };
		OBJ_15 /* LexerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LexerTests.swift; sourceTree = "<group>"; };
		OBJ_16 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_20 /* LexerProtocol.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = LexerProtocol.swift; sourceTree = "<group>"; };
		OBJ_21 /* TokenStream.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TokenStream.swift; sourceTree = "<group>"; };
		OBJ_22 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/marcus/Code/kaleidoscope/.build/checkouts/lexer-protocol/Package.swift"; sourceTree = "<group>"; };
		OBJ_27 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* AST.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AST.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_37 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_38 /* LexerProtocol.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_59 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_60 /* Kaleidoscope.framework in Frameworks */,
				OBJ_61 /* LexerProtocol.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_70 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_13 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* KaleidoscopeTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_14 /* KaleidoscopeTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_15 /* LexerTests.swift */,
				OBJ_16 /* XCTestManifests.swift */,
			);
			name = KaleidoscopeTests;
			path = Tests/KaleidoscopeTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_17 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_18 /* LexerProtocol */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_18 /* LexerProtocol */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* LexerProtocol */,
				OBJ_22 /* Package.swift */,
			);
			name = LexerProtocol;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_19 /* LexerProtocol */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* LexerProtocol.swift */,
				OBJ_21 /* TokenStream.swift */,
			);
			name = LexerProtocol;
			path = ".build/checkouts/lexer-protocol/Sources/LexerProtocol";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* Products */ = {
			isa = PBXGroup;
			children = (
				"LexerProtocol::LexerProtocol::Product" /* LexerProtocol.framework */,
				"Kaleidoscope::Kaleidoscope::Product" /* Kaleidoscope.framework */,
				"Kaleidoscope::KaleidoscopeTests::Product" /* KaleidoscopeTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_13 /* Tests */,
				OBJ_17 /* Dependencies */,
				OBJ_23 /* Products */,
				OBJ_27 /* README.md */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Kaleidoscope */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Kaleidoscope */ = {
			isa = PBXGroup;
			children = (
				OBJ_12 /* Token.swift */,
				OBJ_10 /* Lexer.swift */,
				OBJ_9 /* AST.swift */,
				OBJ_11 /* Parser.swift */,
			);
			name = Kaleidoscope;
			path = Sources/Kaleidoscope;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Kaleidoscope::Kaleidoscope" /* Kaleidoscope */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_29 /* Build configuration list for PBXNativeTarget "Kaleidoscope" */;
			buildPhases = (
				OBJ_32 /* Sources */,
				OBJ_37 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_39 /* PBXTargetDependency */,
			);
			name = Kaleidoscope;
			productName = Kaleidoscope;
			productReference = "Kaleidoscope::Kaleidoscope::Product" /* Kaleidoscope.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Kaleidoscope::KaleidoscopeTests" /* KaleidoscopeTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_53 /* Build configuration list for PBXNativeTarget "KaleidoscopeTests" */;
			buildPhases = (
				OBJ_56 /* Sources */,
				OBJ_59 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_62 /* PBXTargetDependency */,
				OBJ_63 /* PBXTargetDependency */,
			);
			name = KaleidoscopeTests;
			productName = KaleidoscopeTests;
			productReference = "Kaleidoscope::KaleidoscopeTests::Product" /* KaleidoscopeTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Kaleidoscope::SwiftPMPackageDescription" /* KaleidoscopePackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_42 /* Build configuration list for PBXNativeTarget "KaleidoscopePackageDescription" */;
			buildPhases = (
				OBJ_45 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = KaleidoscopePackageDescription;
			productName = KaleidoscopePackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"LexerProtocol::LexerProtocol" /* LexerProtocol */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_64 /* Build configuration list for PBXNativeTarget "LexerProtocol" */;
			buildPhases = (
				OBJ_67 /* Sources */,
				OBJ_70 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LexerProtocol;
			productName = LexerProtocol;
			productReference = "LexerProtocol::LexerProtocol::Product" /* LexerProtocol.framework */;
			productType = "com.apple.product-type.framework";
		};
		"LexerProtocol::SwiftPMPackageDescription" /* LexerProtocolPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_72 /* Build configuration list for PBXNativeTarget "LexerProtocolPackageDescription" */;
			buildPhases = (
				OBJ_75 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LexerProtocolPackageDescription;
			productName = LexerProtocolPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Kaleidoscope" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_23 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Kaleidoscope::Kaleidoscope" /* Kaleidoscope */,
				"Kaleidoscope::SwiftPMPackageDescription" /* KaleidoscopePackageDescription */,
				"Kaleidoscope::KaleidoscopePackageTests::ProductTarget" /* KaleidoscopePackageTests */,
				"Kaleidoscope::KaleidoscopeTests" /* KaleidoscopeTests */,
				"LexerProtocol::LexerProtocol" /* LexerProtocol */,
				"LexerProtocol::SwiftPMPackageDescription" /* LexerProtocolPackageDescription */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_32 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_33 /* AST.swift in Sources */,
				OBJ_34 /* Lexer.swift in Sources */,
				OBJ_35 /* Parser.swift in Sources */,
				OBJ_36 /* Token.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_45 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_46 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_56 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_57 /* LexerTests.swift in Sources */,
				OBJ_58 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_67 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_68 /* LexerProtocol.swift in Sources */,
				OBJ_69 /* TokenStream.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_75 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_76 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_39 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LexerProtocol::LexerProtocol" /* LexerProtocol */;
			targetProxy = 2CAE0AB22329180800131833 /* PBXContainerItemProxy */;
		};
		OBJ_51 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kaleidoscope::KaleidoscopeTests" /* KaleidoscopeTests */;
			targetProxy = 2CAE0AB52329180B00131833 /* PBXContainerItemProxy */;
		};
		OBJ_62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Kaleidoscope::Kaleidoscope" /* Kaleidoscope */;
			targetProxy = 2CAE0AB32329180800131833 /* PBXContainerItemProxy */;
		};
		OBJ_63 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "LexerProtocol::LexerProtocol" /* LexerProtocol */;
			targetProxy = 2CAE0AB42329180800131833 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_30 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Kaleidoscope.xcodeproj/Kaleidoscope_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Kaleidoscope;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Kaleidoscope;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_31 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Kaleidoscope.xcodeproj/Kaleidoscope_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Kaleidoscope;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Kaleidoscope;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_43 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_44 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_49 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_50 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_54 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Kaleidoscope.xcodeproj/KaleidoscopeTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = KaleidoscopeTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_55 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Kaleidoscope.xcodeproj/KaleidoscopeTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = KaleidoscopeTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_65 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Kaleidoscope.xcodeproj/LexerProtocol_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LexerProtocol;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = LexerProtocol;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_66 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Kaleidoscope.xcodeproj/LexerProtocol_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = LexerProtocol;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = LexerProtocol;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_73 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_74 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Kaleidoscope" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_29 /* Build configuration list for PBXNativeTarget "Kaleidoscope" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_30 /* Debug */,
				OBJ_31 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_42 /* Build configuration list for PBXNativeTarget "KaleidoscopePackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_43 /* Debug */,
				OBJ_44 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_48 /* Build configuration list for PBXAggregateTarget "KaleidoscopePackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_49 /* Debug */,
				OBJ_50 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_53 /* Build configuration list for PBXNativeTarget "KaleidoscopeTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_54 /* Debug */,
				OBJ_55 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_64 /* Build configuration list for PBXNativeTarget "LexerProtocol" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_65 /* Debug */,
				OBJ_66 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_72 /* Build configuration list for PBXNativeTarget "LexerProtocolPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_73 /* Debug */,
				OBJ_74 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
